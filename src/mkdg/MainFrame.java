/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mkdg;

import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.DataBufferInt;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.w3c.dom.css.Rect;

/**
 *
 * @author daroslav
 */
public class MainFrame extends javax.swing.JFrame implements ZoomCallback {
    
    private String lastChoosenPath;
    private ElementCanvas elementCanvas;
    private BufferedImage zoomedImage;
    private boolean loadPreviousConfiguration = false;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        initChooseElement();
        ElementPan2();
        
        Properties prop = new Properties();
        InputStream is = null;
        File f = new File("user.properties");
        if(f.exists()) {
            try {
                is = new FileInputStream(f);
                prop.load(is);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            String file = prop.getProperty("file", null);
            String dir = prop.getProperty("dir", null);
            if(file != null) {
                filePathEditText.setText(file);
                loadPreviousConfiguration = true;
                loadImageButton.doClick();
            }
            if(dir != null) {
                lastChoosenPath = dir;
            }
        }
    }
    
    private void initChooseElement() {
        int elementSize = ((int)((float)elementPanel.getHeight()-40)/3);
        elementCanvas = new ElementCanvas(elementSize, 1);
        elementCanvas.setBounds((elementPanel.getWidth() - (elementSize+1)*3)/2, 20, (elementSize+1)*3, (elementSize+1)*3);
        elementPanel.add(elementCanvas);
    }

    
    // macierz dla nauki
    
    private void ElementPan2() {
        int elSize = ((int)((float)elementPanel2.getHeight()-40)/3);
        elementCanvas = new ElementCanvas(elSize, 2);
        elementCanvas.setBounds((elementPanel2.getWidth() - (elSize+1)*3)/2, 20, (elSize+1)*3, (elSize+1)*3);
        elementPanel2.add(elementCanvas);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        erodyl = new javax.swing.ButtonGroup();
        InfoEro = new javax.swing.JFrame();
        InfoDyla = new javax.swing.JFrame();
        InfoEle = new javax.swing.JFrame();
        tabbedPane = new javax.swing.JTabbedPane();
        programPanel = new javax.swing.JPanel();
        radioDylatacja = new javax.swing.JRadioButton();
        radioErozja = new javax.swing.JRadioButton();
        InfoErozja = new javax.swing.JButton();
        InfoDylatacja = new javax.swing.JButton();
        elementPanel2 = new javax.swing.JPanel();
        InfoElement = new javax.swing.JButton();
        przed = new javax.swing.JPanel();
        po = new javax.swing.JPanel();
        start = new javax.swing.JButton();
        komentarzPanel = new javax.swing.JPanel();
        teachPanel = new javax.swing.JPanel();
        binaryImagePanel = new javax.swing.JPanel();
        zoomedImagePanel = new javax.swing.JPanel();
        elementPanel = new javax.swing.JPanel();
        processButton = new javax.swing.JButton();
        filePathEditText = new javax.swing.JTextField();
        loadImageButton = new javax.swing.JButton();
        gamePanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout InfoEroLayout = new javax.swing.GroupLayout(InfoEro.getContentPane());
        InfoEro.getContentPane().setLayout(InfoEroLayout);
        InfoEroLayout.setHorizontalGroup(
            InfoEroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        InfoEroLayout.setVerticalGroup(
            InfoEroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout InfoDylaLayout = new javax.swing.GroupLayout(InfoDyla.getContentPane());
        InfoDyla.getContentPane().setLayout(InfoDylaLayout);
        InfoDylaLayout.setHorizontalGroup(
            InfoDylaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        InfoDylaLayout.setVerticalGroup(
            InfoDylaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout InfoEleLayout = new javax.swing.GroupLayout(InfoEle.getContentPane());
        InfoEle.getContentPane().setLayout(InfoEleLayout);
        InfoEleLayout.setHorizontalGroup(
            InfoEleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        InfoEleLayout.setVerticalGroup(
            InfoEleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        erodyl.add(radioDylatacja);
        radioDylatacja.setLabel("Dylatacja");
        radioDylatacja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDylatacjaActionPerformed(evt);
            }
        });

        erodyl.add(radioErozja);
        radioErozja.setLabel("Erozja");

        InfoErozja.setText("Info Erozja");
        InfoErozja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoErozjaActionPerformed(evt);
            }
        });

        InfoDylatacja.setText("Info Dylatacja");
        InfoDylatacja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoDylatacjaActionPerformed(evt);
            }
        });

        elementPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Element strukturalny", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        elementPanel2.setToolTipText("");

        javax.swing.GroupLayout elementPanel2Layout = new javax.swing.GroupLayout(elementPanel2);
        elementPanel2.setLayout(elementPanel2Layout);
        elementPanel2Layout.setHorizontalGroup(
            elementPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );
        elementPanel2Layout.setVerticalGroup(
            elementPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        InfoElement.setText("Info Element");
        InfoElement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoElementActionPerformed(evt);
            }
        });

        przed.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Przed", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout przedLayout = new javax.swing.GroupLayout(przed);
        przed.setLayout(przedLayout);
        przedLayout.setHorizontalGroup(
            przedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );
        przedLayout.setVerticalGroup(
            przedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
        );

        po.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Po", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout poLayout = new javax.swing.GroupLayout(po);
        po.setLayout(poLayout);
        poLayout.setHorizontalGroup(
            poLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );
        poLayout.setVerticalGroup(
            poLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
        );

        start.setText("START");

        komentarzPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Komentarz", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout komentarzPanelLayout = new javax.swing.GroupLayout(komentarzPanel);
        komentarzPanel.setLayout(komentarzPanelLayout);
        komentarzPanelLayout.setHorizontalGroup(
            komentarzPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );
        komentarzPanelLayout.setVerticalGroup(
            komentarzPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout programPanelLayout = new javax.swing.GroupLayout(programPanel);
        programPanel.setLayout(programPanelLayout);
        programPanelLayout.setHorizontalGroup(
            programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(programPanelLayout.createSequentialGroup()
                .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(programPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(programPanelLayout.createSequentialGroup()
                                .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioErozja)
                                    .addComponent(radioDylatacja))
                                .addGap(18, 18, 18)
                                .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InfoDylatacja)
                                    .addComponent(InfoErozja))
                                .addGap(60, 60, 60)
                                .addComponent(elementPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(programPanelLayout.createSequentialGroup()
                                .addComponent(przed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(komentarzPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)))
                        .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(po, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InfoElement)))
                    .addGroup(programPanelLayout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(start)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        programPanelLayout.setVerticalGroup(
            programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(programPanelLayout.createSequentialGroup()
                .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(programPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioErozja)
                            .addComponent(InfoErozja))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioDylatacja)
                            .addComponent(InfoDylatacja)))
                    .addGroup(programPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(elementPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(programPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(InfoElement)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(start)
                .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(programPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(programPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(przed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(po, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, programPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(komentarzPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))))
        );

        tabbedPane.addTab("Nauka", programPanel);

        binaryImagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Obraz", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        javax.swing.GroupLayout binaryImagePanelLayout = new javax.swing.GroupLayout(binaryImagePanel);
        binaryImagePanel.setLayout(binaryImagePanelLayout);
        binaryImagePanelLayout.setHorizontalGroup(
            binaryImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        binaryImagePanelLayout.setVerticalGroup(
            binaryImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );

        zoomedImagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Powiększony fragment", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        javax.swing.GroupLayout zoomedImagePanelLayout = new javax.swing.GroupLayout(zoomedImagePanel);
        zoomedImagePanel.setLayout(zoomedImagePanelLayout);
        zoomedImagePanelLayout.setHorizontalGroup(
            zoomedImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );
        zoomedImagePanelLayout.setVerticalGroup(
            zoomedImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );

        elementPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stwórz element strukturalny", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout elementPanelLayout = new javax.swing.GroupLayout(elementPanel);
        elementPanel.setLayout(elementPanelLayout);
        elementPanelLayout.setHorizontalGroup(
            elementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );
        elementPanelLayout.setVerticalGroup(
            elementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        processButton.setText("Przetwórz obraz");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        filePathEditText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathEditTextActionPerformed(evt);
            }
        });

        loadImageButton.setText("Wczytaj dowolny obraz");
        loadImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teachPanelLayout = new javax.swing.GroupLayout(teachPanel);
        teachPanel.setLayout(teachPanelLayout);
        teachPanelLayout.setHorizontalGroup(
            teachPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teachPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(teachPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(elementPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(binaryImagePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(teachPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zoomedImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(processButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addComponent(filePathEditText, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        teachPanelLayout.setVerticalGroup(
            teachPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teachPanelLayout.createSequentialGroup()
                .addGroup(teachPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(binaryImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zoomedImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(teachPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(teachPanelLayout.createSequentialGroup()
                        .addComponent(filePathEditText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadImageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(processButton))
                    .addComponent(elementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        tabbedPane.addTab("Program", teachPanel);

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 776, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Gra", gamePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filePathEditTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathEditTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathEditTextActionPerformed

    private void loadImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadImageButtonActionPerformed
        
        if(!loadPreviousConfiguration) {
            JFileChooser fileChooser = new JFileChooser();
        
            String pathToLoad;
            if(lastChoosenPath == null) {
                pathToLoad = System.getProperty("user.home");
            } else {
                pathToLoad = lastChoosenPath;
            }
        
            fileChooser.setCurrentDirectory(new File(pathToLoad));
            int result = fileChooser.showOpenDialog(this);
            
            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                filePathEditText.setText(selectedFile.getAbsolutePath());
                saveLastPath(selectedFile);
                showFileAsImage(selectedFile);
            }
        } else {
            File selectedFile = new File(filePathEditText.getText());
            filePathEditText.setText(selectedFile.getAbsolutePath());
            saveLastPath(selectedFile);
            showFileAsImage(selectedFile);
            loadPreviousConfiguration = false;
        }
    }//GEN-LAST:event_loadImageButtonActionPerformed

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        checkIfImagesAreLoded();
        new TransformationFrame(new FastRGB(zoomedImage), 
                                makeStructuralElement(),
                                zoomedImage.getWidth(), 
                                zoomedImage.getHeight())
                                .setVisible(true);
    }//GEN-LAST:event_processButtonActionPerformed

    private void InfoElementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoElementActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Element strukturalny - jakaś tam definicja");
    }//GEN-LAST:event_InfoElementActionPerformed

    private void InfoDylatacjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoDylatacjaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Dylatacja - jakaś tam definicja");
    }//GEN-LAST:event_InfoDylatacjaActionPerformed

    private void InfoErozjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoErozjaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Erozja - jakaś tam definicja");

    }//GEN-LAST:event_InfoErozjaActionPerformed

    private void radioDylatacjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDylatacjaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioDylatacjaActionPerformed

    private void checkIfImagesAreLoded() {
        if(binaryImagePanel.getComponentCount() == 0) {
            JOptionPane.showMessageDialog(null, "Wczytaj obraz w celu dalszego przetwarzania");
            return;
        }
        if(zoomedImage == null) {
            JOptionPane.showMessageDialog(null, "Zaznacz fragment wczytanego obrazu w celu uzyskania powiększenia i dalszego przetwarzania");
            return;
        }
    }
    
    private int[][] makeStructuralElement() {
        return elementCanvas.getStructuralElementArray();
    }
    
    private void saveLastPath(File selectedFile) {
        String[] dividedPath = selectedFile.getAbsolutePath().split(""+File.separator+File.separator);
        dividedPath = Arrays.copyOf(dividedPath, dividedPath.length - 1);
        StringBuilder pathWithoutLastSegment = new StringBuilder();
        for (String s : dividedPath) {
            pathWithoutLastSegment.append(s);
            pathWithoutLastSegment.append(File.separator);
        } 
        lastChoosenPath = pathWithoutLastSegment.toString();
        System.out.println("Selected file: " + selectedFile.getAbsolutePath()); 
        System.out.println("Last path: " + lastChoosenPath); 
        
        Properties prop = new Properties();
        prop.setProperty("dir", lastChoosenPath);
        prop.setProperty("file", selectedFile.getAbsolutePath());
        File f = new File("user.properties");
        OutputStream out;
        try {
            out = new FileOutputStream(f);
            prop.store(out, "");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void showFileAsImage(File selectedFile) {
        Image pic = null;
        try {
            pic = ImageIO.read(selectedFile);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(pic != null) {
            //remove prevois images
            binaryImagePanel.removeAll();
            zoomedImagePanel.removeAll();
            
            int width, height;
        
            BufferedImage fittedImage = toBufferedImage(pic);
            float aspectRatio = (float)fittedImage.getWidth() / (float)fittedImage.getHeight();

            if(fittedImage.getHeight() < fittedImage.getWidth()) {
                width = binaryImagePanel.getWidth() - 50;
                height = (int)((float)width / aspectRatio);
            } else {
                height = binaryImagePanel.getHeight() - 50;
                width = (int)(aspectRatio * (float)height);
            }
            fittedImage = createResizedCopy(fittedImage, width, height, false);
            
            SelectedImageCanvas canvas = new SelectedImageCanvas(fittedImage, this);
            canvas.setBounds((binaryImagePanel.getWidth() - fittedImage.getWidth(null))/2, (binaryImagePanel.getHeight() - fittedImage.getHeight(null))/2, fittedImage.getWidth(null), fittedImage.getHeight(null));
            binaryImagePanel.add(canvas);
        }
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame InfoDyla;
    private javax.swing.JButton InfoDylatacja;
    private javax.swing.JFrame InfoEle;
    private javax.swing.JButton InfoElement;
    private javax.swing.JFrame InfoEro;
    private javax.swing.JButton InfoErozja;
    private javax.swing.JPanel binaryImagePanel;
    private javax.swing.JPanel elementPanel;
    private javax.swing.JPanel elementPanel2;
    private javax.swing.ButtonGroup erodyl;
    private javax.swing.JTextField filePathEditText;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel komentarzPanel;
    private javax.swing.JButton loadImageButton;
    private javax.swing.JPanel po;
    private javax.swing.JButton processButton;
    private javax.swing.JPanel programPanel;
    private javax.swing.JPanel przed;
    private javax.swing.JRadioButton radioDylatacja;
    private javax.swing.JRadioButton radioErozja;
    private javax.swing.JButton start;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JPanel teachPanel;
    private javax.swing.JPanel zoomedImagePanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void zoomed(Image image, int x1, int y1, int x2, int y2) {
        
        zoomedImagePanel.removeAll();
        int width, height;
        
        BufferedImage croppedImage = cropImage(toBufferedImage(image), x1, y1, x2, y2);
        float aspectRatio = (float)croppedImage.getWidth() / (float)croppedImage.getHeight();

        if(croppedImage.getHeight() < croppedImage.getWidth()) {
            width = (zoomedImagePanel.getWidth() - 60)/10;
            height = (int)((float)width / aspectRatio);
        } else {
            height = (zoomedImagePanel.getHeight() - 60)/10;
            width = (int)(aspectRatio * (float)height);
        }
        
        zoomedImage = createResizedCopy(croppedImage, width, height, false);
        croppedImage = createResizedCopy(zoomedImage, width*10, height*10, false);
        
        ZoomedImageCanvas canvas = new ZoomedImageCanvas(croppedImage);
        canvas.setBounds((zoomedImagePanel.getWidth() - croppedImage.getWidth(null))/2, (zoomedImagePanel.getHeight() - croppedImage.getHeight(null))/2, croppedImage.getWidth(null), croppedImage.getHeight(null));
        zoomedImagePanel.add(canvas);
    }
    
    private BufferedImage cropImage(BufferedImage src, int x1, int y1, int x2, int y2) {
        BufferedImage dest = src.getSubimage(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x1 - x2), Math.abs(y1 - y2));
        return dest; 
    }
    
    public BufferedImage toBufferedImage(Image img) {
        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }

        // Create a buffered image with transparency
        BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        // Draw the image on to the buffered image
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();

        // Return the buffered image
        return bimage;
    }
    
    private BufferedImage createResizedCopy(Image originalImage, 
    		int scaledWidth, int scaledHeight, 
    		boolean preserveAlpha) {
    	int imageType = preserveAlpha ? BufferedImage.TYPE_INT_RGB : BufferedImage.TYPE_INT_ARGB;
    	BufferedImage scaledBI = new BufferedImage(scaledWidth, scaledHeight, imageType);
    	Graphics2D g = scaledBI.createGraphics();
    	if (preserveAlpha) {
    		g.setComposite(AlphaComposite.Src);
    	}
    	g.drawImage(originalImage, 0, 0, scaledWidth, scaledHeight, null); 
    	g.dispose();
    	return scaledBI;
    }
    
}
