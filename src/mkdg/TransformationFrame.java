/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mkdg;

import static java.awt.image.ImageObserver.HEIGHT;
import javax.swing.JSlider;
import org.w3c.dom.css.Rect;

/**
 *
 * @author daroslav
 */
public class TransformationFrame extends javax.swing.JFrame {

    
    private Method method;
    private FastRGB rgbModel;
    private int[][] structuralElement;
    private int width;
    private int height;
    
    private JSlider thresholdSlider;
    
    /**
     * Creates new form TransformationFrame
     */
    public TransformationFrame(FastRGB rgbModel, Method method, int[][] structuralElement, int width, int height) {
        this.rgbModel = rgbModel;
        this.method = method;
        this.structuralElement = structuralElement;
        this.width = width;
        this.height = height;
        
        initComponents();
        showBinaryImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        binaryImagePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        binaryImagePanel.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout binaryImagePanelLayout = new javax.swing.GroupLayout(binaryImagePanel);
        binaryImagePanel.setLayout(binaryImagePanelLayout);
        binaryImagePanelLayout.setHorizontalGroup(
            binaryImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
        );
        binaryImagePanelLayout.setVerticalGroup(
            binaryImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 426, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(binaryImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(binaryImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void showBinaryImage() {
        TransformationCanvas canvas = new TransformationCanvas(rgbModel);
        this.setBounds(0, 0, (int)(width*canvas.getTileSize() * 1.3), (int)(height*canvas.getTileSize() * 1.3));
        this.invalidate();
        binaryImagePanel.setBounds(0,0, this.getWidth(), this.getHeight());
        binaryImagePanel.invalidate();
        
        canvas.setBounds((binaryImagePanel.getWidth() - width*canvas.getTileSize())/2, 
                         0, 
                         width*canvas.getTileSize(),
                         height*canvas.getTileSize());
        
        binaryImagePanel.add(canvas);
        binaryImagePanel.invalidate();
        
        canvas.repaint();

        
        //thresholdSlider = new JSlider();
        //thresholdSlider.setBounds(20, height*canvas.getTileSize() + 50, binaryImagePanel.getWidth() - 40, 10);
        //thresholdSlider.setVisible(true);
    }
    
    public enum Method {
        Erosion, Dilation
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel binaryImagePanel;
    // End of variables declaration//GEN-END:variables
}
